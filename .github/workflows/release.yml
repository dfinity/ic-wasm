name: Release
on:
  push:
    tags:
      - '*'
jobs:
  build:
    name: Build for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
#          - os: ubuntu-20.04
#            name: linux64
#            artifact_name: target/release/ic-wasm
#            asset_name: ic-wasm-linux64
#          - os: macos-13
#            name: macos
#            artifact_name: target/release/ic-wasm
#            asset_name: ic-wasm-macos
          - os: ubuntu-latest
            name: linux-musl
            artifact_name: ic-wasm
            asset_name: ic-wasm-linux-musl
    steps:
      - uses: actions/checkout@v4

      # Regular build for non-MUSL targets
      - name: Build (non-MUSL)
        if: matrix.name != 'linux-musl'
        run: cargo build --release --locked

      # Native MUSL build using Alpine Docker
      - name: Build (MUSL)
        if: matrix.name == 'linux-musl'
        run: |
          docker run --rm -v $(pwd):/src -w /src rust:alpine sh -c '
            # Install build dependencies
            apk add --no-cache musl-dev build-base

            # Build the project
            cargo build --release --locked

            # Copy the binary out
            cp target/release/ic-wasm ./ic-wasm
          '

      - name: 'Upload assets'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}
          retention-days: 3

  test:
    needs: build
    name: Test for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
#          - os: ubuntu-20.04
#            asset_name: ic-wasm-linux64
#          - os: ubuntu-22.04
#            asset_name: ic-wasm-linux64
          - os: ubuntu-20.04
            asset_name: ic-wasm-linux-musl
          - os: ubuntu-22.04
            asset_name: ic-wasm-linux-musl
#          - os: macos-13
#            asset_name: ic-wasm-macos
#          - os: macos-14
#            asset_name: ic-wasm-macos
    steps:
      - name: Get executable
        id: download
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.asset_name }}

      - name: Test MUSL binary in Alpine
        if: matrix.asset_name == 'ic-wasm-linux-musl'
        run: |
          docker run --rm -v $(pwd):/test alpine:latest sh -c '
            chmod +x /test/ic-wasm
            /test/ic-wasm --version
          '

      - name: Test non-MUSL binary
        if: matrix.asset_name != 'ic-wasm-linux-musl'
        run: |
          chmod +x ic-wasm
          ./ic-wasm --version

  publish:
    needs: test
    name: Publish ${{ matrix.asset_name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - asset_name: ic-wasm-linux64
            binstall_name: ic-wasm-x86_64-unknown-linux-gnu.tar.gz
          - asset_name: ic-wasm-linux-musl
            binstall_name: ic-wasm-x86_64-unknown-linux-musl.tar.gz
          - asset_name: ic-wasm-macos
            binstall_name: ic-wasm-x86_64-apple-darwin.tar.gz
    runs-on: ubuntu-latest
    steps:
      - name: Get executable
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.asset_name }}

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ic-wasm
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}

      - name: Bundle for binstall
        run: |
          chmod +x ic-wasm
          tar -cvzf ${{ matrix.binstall_name }} ic-wasm

      - name: Upload binstall binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.binstall_name }}
          asset_name: ${{ matrix.binstall_name }}
          tag: ${{ github.ref }}