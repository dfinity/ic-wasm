name: Release
on:
  push:
    tags:
      - '*'
jobs:
  build:
    name: Build for ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            name: linux64
            artifact_name: target/release/ic-wasm
            asset_name: ic-wasm-linux64
          - os: ubuntu-20.04
            name: linux64-musl
            artifact_name: target/x86_64-unknown-linux-musl/release/ic-wasm
            asset_name: ic-wasm-linux-musl
            target: x86_64-unknown-linux-musl
          - os: macos-13
            name: macos
            artifact_name: target/release/ic-wasm
            asset_name: ic-wasm-macos
    steps:
      - uses: actions/checkout@v4
      
      - name: Install MUSL tools and C++ dependencies
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools musl-dev clang
          sudo ln -s /usr/bin/clang++ /usr/bin/musl-g++
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV
          echo "CFLAGS=-D_FORTIFY_SOURCE=0" >> $GITHUB_ENV
          echo "CXXFLAGS=-D_FORTIFY_SOURCE=0 -stdlib=libc++ -static" >> $GITHUB_ENV
          echo "LDFLAGS=-static -stdlib=libc++" >> $GITHUB_ENV
      
      - name: Install Rust target
        if: matrix.target != ''
        run: rustup target add ${{ matrix.target }}
      
      - name: Install libc++
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get install -y libc++-dev libc++abi-dev

      - name: Build
        run: |
          if [ "${{ matrix.target }}" != "" ]; then
            RUSTFLAGS="-C target-feature=+crt-static -C linker=clang" cargo build --release --locked --target ${{ matrix.target }}
          else
            cargo build --release --locked
          fi

      - name: 'Upload assets'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.artifact_name }}
          retention-days: 3

  test:
    needs: build
    name: Test for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            asset_name: ic-wasm-linux64
          - os: ubuntu-20.04
            asset_name: ic-wasm-linux64
          - os: ubuntu-20.04
            asset_name: ic-wasm-linux-musl
          - os: macos-13
            asset_name: ic-wasm-macos
          - os: macos-14
            asset_name: ic-wasm-macos
    steps:
      - name: Get executable
        id: download
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
      - name: Executable runs
        run: |
          chmod +x ic-wasm
          ./ic-wasm --version

  publish:
    needs: test
    name: Publish ${{ matrix.asset_name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - asset_name: ic-wasm-linux64
            binstall_name: ic-wasm-x86_64-unknown-linux-gnu.tar.gz
          - asset_name: ic-wasm-linux-musl
            binstall_name: ic-wasm-x86_64-unknown-linux-musl.tar.gz
          - asset_name: ic-wasm-macos
            binstall_name: ic-wasm-x86_64-apple-darwin.tar.gz
    runs-on: ubuntu-latest
    steps:
      - name: Get executable
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ic-wasm
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
      - name: Bundle for binstall
        run: |
          chmod +x ic-wasm
          tar -cvzf ${{ matrix.binstall_name }} ic-wasm
      - name: Upload binstall binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.binstall_name }}
          asset_name: ${{ matrix.binstall_name }}
          tag: ${{ github.ref }}